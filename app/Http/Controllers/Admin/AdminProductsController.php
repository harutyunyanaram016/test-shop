<?phpnamespace App\Http\Controllers\Admin;use App\Category;use App\Http\Requests\PhotosRequest;use App\Photo;use App\Product;use Illuminate\Http\Request;use App\Http\Controllers\Controller;use Intervention\Image\ImageManagerStatic as Image;class AdminProductsController extends Controller{    public function xhrGetSubcategories($id)    {        $subcategories = Subcategory::where('category_id','=', $id)->select('id', 'name')->get();        header('Content-Type: application/json');        echo json_encode($subcategories);    }    /**     * Display a listing of the resource.     *     * @return \Illuminate\Http\Response     */    public function index()    {        $products = Product::all();        return view('admin.products.index', ['products' => $products]);    }    /**     * Show the form for creating a new resource.     *     * @return \Illuminate\Http\Response     */    public function create()    {        $categories = Category::all()->pluck('name', 'id')->all();        return view('admin.products.create', ['categories'=>$categories]);    }    /**     * Store a newly created resource in storage.     *     * @param  \Illuminate\Http\Request  $request     * @return \Illuminate\Http\Response     */    public function store(Request $request)    {        $this->validate($request, [            'images' => 'required',            'brand' => 'required',            'price' => 'required',            'category_id' => 'required',            'released_on' => 'required',        ]);        $input = $request->all();        $product = Product::create($input);        if ($request->get('images')){            foreach ($request->get('images') as $item)                $photo = Photo::create(['file'=> $item,'product_id'=>$product->id]);        }        return redirect()->route('admin.products.index');    }    public function  upload(Request $request){        $this->validate($request, [            'file' => 'required|image|mimetypes:image/*|max:6000'        ]);        $image       = $request->file('file');        $filename    = $image->getClientOriginalName();        $image_resize = Image::make($image->getRealPath());        $image_resize->resize(300, 300);        $filename = time().$filename;        $image_resize->resize(300, 300);        $image_resize->save(public_path('/images/products' .$filename));        $url = $filename;        return response()->json(['uri' => $url]);    }    /**     * Display the specified resource.     *     * @param  int  $id     * @return \Illuminate\Http\Response     */    public function show($id)    {        //    }    /**     * Show the form for editing the specified resource.     *     * @param  int  $id     * @return \Illuminate\Http\Response     */    public function edit($id)    {        $product = Product::findOrFail($id);        $categories = Category::all()->pluck('name', 'id')->all();        return view('admin.products.edit', ['categories'=>$categories, 'product'=>$product]);    }    /**     * Update the specified resource in storage.     *     * @param  \Illuminate\Http\Request  $request     * @param  int  $id     * @return \Illuminate\Http\Response     */    public function update(PhotosRequest $request, $id)    {        $product = Product::findOrFail($id);        $input = $request->all();        //photo        $product->update($input);        return redirect()->route('admin.products.index');    }    /**     * Remove the specified resource from storage.     *     * @param  int  $id     * @return \Illuminate\Http\Response     */    public function destroy($id)    {        $product = Product::findOrFail($id);//        unlink(public_path(). $icon->file);//        $photo->delete();////        $icon->delete();        $product->delete();        return redirect()->route('admin.products.index');    }}