<?phpnamespace App\Http\Controllers;use App\Cart;use App\Category;use Illuminate\Support\Facades\App;use App\Product;use App\Subcategory;use Illuminate\Http\Request;use Illuminate\Support\Facades\Session;class ProductsController extends Controller{    public function details($id)    {        if(Session::get('language')){            App::setLocale(Session::get('language'));        }        $product = Product::findOrFail($id);        $random_products = Product::inRandomOrder()->where('category_id',$product->category_id)->take(4)->get();        return view('products.details', ['product'=>$product, 'products'=>$random_products]);    }    public function productsBySubcategory($subcategory)    {        if(Session::get('language')){            App::setLocale(Session::get('language'));        }        $subcategory = Category::findOrFail($subcategory);        $maxPrice  = Product::where('category_id', $subcategory->id)->orderBy('price','desc')->first()->price;        $minPrice  = Product::where('category_id', $subcategory->id)->orderBy('price','asc')->first()->price;                $products = $subcategory->products()->paginate(9);        $category_name = $subcategory->name;        return view('products.productBySubcategory', ['products'=>$products, 'category_name'=>$category_name,'minPrice'=>$minPrice,'maxPrice'=>$maxPrice, 'subcategory_name'=>$subcategory->name]);    }    public function addProductsToCart($id, $qty = 1) {        $product = Product::findOrFail($id);        $oldCart = Session::has('cart') ? Session::get('cart') : null;        $cart = new Cart($oldCart);        $cart->add($product, $id, $qty);        Session::put('cart', $cart);        return redirect()->back();    }    public function addProductsToCartPost(Request $request) {        $id = $request->get('id');        $qty = $request->get('qty');        $product = Product::findOrFail($id);        $oldCart = Session::has('cart') ? Session::get('cart') : null;        $cart = new Cart($oldCart);        $cart->add($product, $id, $qty);        Session::put('cart', $cart);        $html = view('products.cart', ['cart'=>$cart ]);        return response()->json(array('html'=>$html), 200, [], JSON_UNESCAPED_UNICODE);    }    public function deleteProductsFromCart($id, $qty = 1)    {        $product = Product::findOrFail($id);        $oldCart = Session::has('cart') ? Session::get('cart') : null;        $cart = new Cart($oldCart);        $cart->delete($product->id, $qty);        Session::put('cart', $cart);        return redirect()->route('orders.show');    }    public function deleteProductsFromCartPost(Request $request, $id, $qty = 1)    {        $product = Product::findOrFail($id);        $oldCart = Session::has('cart') ? Session::get('cart') : null;        $cart = new Cart($oldCart);        $cart->delete($product->id, $qty);        Session::put('cart', $cart);        $html = view('products.cart', ['cart'=>$cart ]);        return response()->json(array('html'=>$html), 200, [], JSON_UNESCAPED_UNICODE);    }    public function getProductById(Request $request){        $id = $request->get('id');        if($id){            $product = Product::where('id',$id)->first();            return response()->json(array('product'=>$product), 200, [], JSON_UNESCAPED_UNICODE);        }    }    public function xhrDeleteProductsFromCart($id, $qty = 1)    {        $product = Product::findOrFail($id);        $oldCart = Session::has('cart') ? Session::get('cart') : null;        $cart = new Cart($oldCart);        $cart->delete($product->id, $qty);        Session::put('cart', $cart);        header('Content-Type: application/json');        echo json_encode($cart);    }    public function xhrDeleteProductsFromCartPost($id, $qty = 1)    {        $product = Product::findOrFail($id);        $oldCart = Session::has('cart') ? Session::get('cart') : null;        $cart = new Cart($oldCart);        $cart->delete($product->id, $qty);        Session::put('cart', $cart);        $html = view('products.cart', ['cart'=>$cart ]);        return response()->json(array('html'=>$html), 200, [], JSON_UNESCAPED_UNICODE);    }    public function xhrAddProductsToCart($id, $qty = 1)    {        $product = Product::findOrFail($id);        $oldCart = Session::has('cart') ? Session::get('cart') : null;        $cart = new Cart($oldCart);        $cart->add($product, $id, $qty);        Session::put('cart', $cart);        header('Content-Type: application/json');        echo json_encode($cart);    }    public function xhrAddProductsToCartPost(Request $request,$id, $qty = 1)    {        $product = Product::findOrFail($id);        $oldCart = Session::has('cart') ? Session::get('cart') : null;        $cart = new Cart($oldCart);        $cart->add($product, $id, $qty);        Session::put('cart', $cart);        $html = view('products.cart', ['cart'=>$cart ]);        return response()->json(array('html'=>$html), 200, [], JSON_UNESCAPED_UNICODE);    }    public function search(Request $request) {        if(Session::get('language')){            App::setLocale(Session::get('language'));        }        $category_id = ($request->category_id) ? $request->category_id : 0;        if ($category_id) {            $products = Product::where('category_id','=', $category_id)                ->where(function ($query) use ($request) {                    $query->where('brand', 'like', '%' . $request->search . '%');                })                ->paginate(3);        } else {            $products = Product::where('brand', 'like', '%' . $request->search . '%')                ->paginate(3);        }        $products->withPath('?category_id='. $category_id . '&search='.$request->search);        return view('products.search', ['products'=>$products]);    }}